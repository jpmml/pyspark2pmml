name: pytest

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - python: '3.9'
            pyspark: '3.0.3'
            java: '11'
            jpmml-sparkml-packages: 'org.jpmml:pmml-sparkml:2.0.6'
          - python: '3.9'
            pyspark: '3.4.4'
            xgboost: '2.1.4'
            java: '11'
            jpmml-sparkml-packages: 'org.jpmml:pmml-sparkml:3.0.1,org.jpmml:pmml-sparkml-xgboost:3.0.1,com.google.guava:guava:33.4.8-jre,ml.dmlc:xgboost4j-spark_2.12:2.1.4'
          - python: '3.11'
            pyspark: '3.5.6'
            xgboost: '3.0.2'
            java: '11'
            jpmml-sparkml-packages: 'org.jpmml:pmml-sparkml:3.1.1,org.jpmml:pmml-sparkml-xgboost:3.1.1,com.google.guava:guava:33.4.8-jre,ml.dmlc:xgboost4j-spark_2.12:3.0.2'
          - python: '3.11'
            pyspark: '4.0.0'
            java: '17'
            jpmml-sparkml-packages: 'org.jpmml:pmml-sparkml:3.2.0'

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.config.java }}
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.config.python }}
        cache: 'pip'
    - run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pyspark==${{ matrix.config.pyspark }}
        if [ -n "${{ matrix.config.xgboost }}" ]; then pip install xgboost==${{ matrix.config.xgboost }}; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - env:
        JPMML_SPARKML_PACKAGES: ${{ matrix.config.jpmml-sparkml-packages }}
      run: |
        python -m pytest
